<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:beans.properties"/>

    <alias name="user1" alias="userAlias"/>
    <!-- abstract user to be inherited from -->
    <bean id="superuser" abstract="true" class="core.beans.User" p:password="${user.password}"/>
    <!-- constructor based initialization -->
    <bean id="user1" class="core.beans.User"
          parent="superuser"
          c:id="#{T(java.lang.Math).random()}"
          p:username="SomeUserName"
    />
    <!-- factory method based initilization -->
    <bean id="user2" class="core.beans.User"
          parent="superuser"
          factory-method="createInstance"
          p:username="SomeUserName1"/>
    <context:property-override location="classpath:beans-override.properties"/>

    <!-- method replacement and user without id but primary -->
    <bean id="methodReplacer" class="core.beans.User.UserMethodReplacer"/>
    <bean class="core.beans.User" primary="true"
          parent="superuser"
          c:id="1"
          p:username="Invalid">
        <replaced-method name="getId" replacer="methodReplacer"/>
    </bean>


    <util:list id="usersInShop" value-type="core.beans.User">
        <ref bean="user1"/>
        <ref bean="user2"/>
    </util:list>
    <bean id="shop1" class="core.beans.Shop" depends-on="usersInShop" scope="prototype"
        c:users-ref="usersInShop"/>

    <!-- Lazy initialization -->
    <bean id="singleton1" class="core.beans.Singleton"
          factory-method="getInstance"
          lazy-init="true"/>

    <!-- Lifecycle bean -->
    <bean id="lifecycle" class="core.beans.LifecycleBean"/>

    <!-- Application context aware -->
    <bean class="core.beans.AwareInterfaces"/>

    <!-- Bean post processor -->
    <bean class="core.beans.BeanPostProcessorBean"/>

</beans>